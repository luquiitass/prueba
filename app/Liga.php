<?php
/**
 * Created by PhpStorm.
 * User: lucas
 * Date: 19/02/17
 * Time: 19:35
 */

namespace App;


class Liga  extends Torneo
{

    /* ---------Relaciones-----------------*/
//    public function equipos(){
//        return Equipo::join('equipo_grupo','equipos.id','=','equipo_grupo.equipo_id')
//            ->join('grupos','grupos.id','=','equipo_grupo.grupo_id')
//            ->join('fases','grupos.fase_id','=','fases.id')
//            ->join('torneos','fases.torneo_id','=','torneos.id')
//            ->where('torneos.id','=',$this->id)
//            ->get();
//    }

    public function save(array $options = [])
    {
        $this->attributes['tipo_torneo_id']=1;
        //dd($this->attributes);
        return parent::save($options); // TODO: Change the autogenerated stub
    }


    public function addAdministrador($users)
    {
        $this->t_addAdministradores($users);
    }

    public function attach($class, $datas)
    {
        self::t_attach($class,$datas);
    }

    public function detach($class)
    {
        self::t_detach($class);
    }

    public function fase(){
        return Fase::join('torneos','torneos.id','=','fases.torneo_id')
            ->where('torneos.id','=',$this->id)
            ->first();
    }

    public function grupo(){
        return Grupo::join('fases','fases.id','=','grupos.fase_id')
            ->join('torneos','torneos.id','=','fases.torneo_id')
            ->where('torneos.id','=',$this->id)
            ->first();
    }

    public function fechas(){
        return Fecha::join('grupos','fechas.grupo_id','=','grupos.id')
            ->join('fases','grupos.fase_id','=','fases.id')
            ->join('torneos','fases.torneo_id','=','torneos.id')
            ->where('torneos.id','=',$this->id)
            ->select('fechas.*')
            ->get();
    }

    public function fecha($id){
        return $this->fechas()->where('id',$id);
    }

    public function todosPartidos(){
        return Partido::join('fechas','partidos.fecha_id','=','fechas.id')
            ->join('grupos','fechas.grupo_id','=','grupos.id')
            ->join('fases','grupos.fase_id','=','fases.id')
            ->join('torneos','fases.torneo_id','=','torneos.id')
            ->where('torneos.id','=',$this->id)
            ->select('partido.*')
            ->get();
    }

    public function tablaPosiciones(){

    }
    /* ---------Relaciones-----------------*/



    public function generarLiga(){
        //Crea la Fase
        $atribustosFase = ['torneo_id'=>$this->id,'nombre'=>'fase-liga','descripcion'=>'En esta fase se creara una liga','estado'=>Fase::$estados[1]];
        $fase = new Fase($atribustosFase);
        $fase->save();
        //Crea la Fase

        //crea un Grupo para esta fase
        $grupo = $fase->crearGrupo();

        //asocia los equipos que oertenecen a un torneo se asocian a el grupo
        $grupo->asociarEquipos($this->equipos);

        //Se crean las fechas con los equipos asociados
        $grupo->crearFechas();

        //crea los partidos por cada fecha.
        $grupo->crearPartidosPorFecha();

    }

    public static function validarLiga($input){

        return true;
    }



    public function validarDelete(){
        if (!empty($this->equipos)){
            throw new \Exception('Esta Liga no se puede eliminar porque tiene equipos asociados');
        }
    }


}